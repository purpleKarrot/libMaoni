[library libMaoni
   [quickbook 1.5]
   [authors [Hutter, Stefan], [Pfeifer, Daniel]]
   [copyright 2009 2010 Stefan Hutter, Daniel Pfeifer]
   [purpose common rendering framework]
]

[def __ICET__      [@http://www.cs.unm.edu/~kmorel/IceT/ IceT]]
[def __EQUALIZER__ [@http://www.equalizergraphics.com/ Equalizer]]


[section Introduction]

You can choose between three models:

* an ordinary tea cup
* a spoon (remember: try to realize the truth) and
* the famous [@http://en.wikipedia.org/wiki/Utah_teapot teapotahedron].

[endsect]

[section Build from Scratch]
This is a how-to develop for libMaoni from scratch using
[@http://www.ubuntu.com/ Ubuntu 10.04 Linux] and [@http://eclipse.org/downloads/ 
Eclipse IDE for C/C++ Developers].

[section How-to Github]
GIT allows an alternative work flow people aren't used from CVS or SVN. You
don't have to become a libMaoni developer and don't have to gain access to the
repository to be able of up- and download patches, instead you have to fork the
projekt and will work on your personal fork.

Create an account on [@http://www.github.com github.com]; you can find the
guides on how to fork a project and creating and importing ssh-keys into your
github account in the popular guide section of the help area.

Now you can fetch your fork to your local machine: open Eclipse and create a new
C++ Project, an [*Empty Makefile Project] using [*Other Toolchain].

To checkout your fork you have to install [@apt://git-core GIT] first, open a
terminal:
[teletype]

  $ sudo aptitude install git-core

switch to your workspace and create the clone of your fork (see help)

  $ git clone git@github.com:yourLogin/libMaoni.git

and the upstream to purpleKarrots libMaoni repository:

  $ git remote add upstream git://github.com/purpleKarrot/libMaoni.git'

Update your fork (origin) from purpleKarrots libMaoni repository (upstream) so
your fork is up to date:

  $ git pull upstream master

This will update your remote repository as well as your local files.
[endsect]


[section How-to build libMaoni]
We use cmake to check for dependencies and creating the makefiles and need some other packages:[br]
[teletype]$ sudo aptitude install cmake g++ libgqlviewer-qt4-dev libboost1.40-all-dev libglew1.5-dev doxygen docbook-xsl lib3ds-dev


For developing libMaoni, you have to install equalizer, a parallel rendering
framework where libMaoni was intended to be a viewer for when the project
started. You can get equalizer
[@https://sourceforge.net/projects/equalizer/files/ from sourceforge].

  $ sudo aptitude install uuid-dev bison flex
  $ make -j4
  $ sudo make install

For developing libMaoni with IceT you also need to install the following:[br]
[teletype]$ sudo aptitude install mpich2 (boost_mpi??)


Now let us build libMaoni! Still in the terminal create a "build" folder as
child the libMaoni project folder:

  $ cd libMaoni
  $ mkdir build

Enter this folder and create the Makefiles:

  $ cd build
  $ cmake ..

If there are still some dependencies missing you will get an error now.


The different kinds of building libMaoni are controlled by make arguments, e.g.:[br]
[table:id libMaoni make parameters
    [[Parameter] [Build]]
    [[`$ make examples`]      [compiles the viewer including file-loaders and algorithms]]
    [[`$ make libMaoni-man`]  [creates the unix manpages]]
    [[`$ make libMaoni-html`] [creates the html api and documentation]]
]
[endsect]

[section How-to commit modifications]
  $ git add .

use filepaths instead of . if you don't want to add every modification to a
certain commit, modifiy .gitignore to permanently ban files or folder from
commiting.

Fix the modifications by creating a meaningful commit and keep track of your
commits by creating a single one for every requirement:

  $ git commit -m'some meaningful comment'

Until now you just copied the libMaoni project to your repository on github and
to your local harddrive and modified your local version. Upload your fixed
commit to your remote repository on github:

  $ git push origin master

[note Remember the name convention:
* upstream is git://github.com/purpleKarrot/libMaoni.git
* origin is your remote repository
* master is your local repository]

If you like to make your changes public to the whole libMaoni community, use the
pullrequest button on github to ask for your code being pulled to purpleKarrot's
repository.
[endsect]
[endsect]

[section Tutorial]
In Maoni everithing is optional.
The simplest application built on Maoni consist of zero lines of code.

[section Custom File Loader]
[macroref MESH_LOADER Click me!]
[endsect]

[section Custom Render Algorithm]
[endsect]

[section Custom Shader Programs]
[endsect]

[endsect]

[xinclude maoni-ref.xml]

[section Used Libraries and Tools]

* __ICET__
* __EQUALIZER__

[endsect]
